<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;

// Custom Requests
use App\Http\Requests\{{ requestFolder }}{{ model }}\Index{{ model }};
use App\Http\Requests\{{ requestFolder }}{{ model }}\Show{{ model }};
use App\Http\Requests\{{ requestFolder }}{{ model }}\Create{{ model }};
use App\Http\Requests\{{ requestFolder }}{{ model }}\Update{{ model }};
use App\Http\Requests\{{ requestFolder }}{{ model }}\Delete{{ model }};

// Custom Events
use App\Events\{{ requestFolder }}{{ model }}\{{ model }}Collected;
use App\Events\{{ requestFolder }}{{ model }}\{{ model }}Fetched;
use App\Events\{{ requestFolder }}{{ model }}\{{ model }}Created;
use App\Events\{{ requestFolder }}{{ model }}\{{ model }}Updated;
use App\Events\{{ requestFolder }}{{ model }}\{{ model }}Deleted;

// Other Imports
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;

class {{ class }} extends Controller
{
    public function index(Index{{model}} $request): JsonResponse
    {
        $data = new {{ model }};

        if ($request->has('full_data') === TRUE) {
            $data = $data->get();
        } else {
            $data = $data->simplePaginate($request->get('per_page', 15));
        }

        event(new {{ model }}Collected($data));

        return customResponse()
            ->data($data)
            ->message('Successfully collected record.')
            ->success()
            ->generate();
    }

    public function store(Create{{model}} $request): JsonResponse
    {
        $data = $request->all();

        $model = {{ model }}::create($data)->fresh();

        event(new {{ model }}Created($model));

        return customResponse()
            ->data($model)
            ->message('Successfully created record.')
            ->success()
            ->generate();
    }

    public function show(Show{{model}} $request, {{ model }} ${{ modelVariable }}): JsonResponse
    {
        event(new {{ model }}Fetched(${{ modelVariable }}));

        return customResponse()
            ->data(${{ modelVariable }})
            ->message('Successfully fetched record.')
            ->success()
            ->generate();
    }

    public function update(Update{{model}} $request, {{ model }} ${{ modelVariable }}): JsonResponse
    {
        event(new {{ model }}Updated(${{ modelVariable }}));

        return customResponse()
            ->data(${{ modelVariable }})
            ->message('Successfully updated record.')
            ->success()
            ->generate();
    }

    public function destroy(Delete{{model}} $request, {{ model }} ${{ modelVariable }}): JsonResponse
    {
        ${{ modelVariable }}->delete();

        event(new {{ model }}Deleted(${{ modelVariable }}));

        return customResponse()
            ->data(${{ modelVariable }})
            ->message('Successfully deleted record.')
            ->success()
            ->generate();
    }

    public function restore(Request $request, ${{ modelVariable }}): JsonResponse
    {
        //{{ model }}::withTrashed()->find(${{ modelVariable }})->restore();

        event(new {{ model }}Created(${{ modelVariable }}));

        return customResponse()
            ->data(${{ modelVariable }})
            ->message('Successfully restored record.')
            ->success()
            ->generate();
    }
}
